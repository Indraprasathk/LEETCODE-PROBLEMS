class Solution:
    def __init__(self):
        self.MOD = 10**9 + 7

    def count(self, index, seats, corridor, cache):
        if index == len(corridor):
            return 1 if seats == 2 else 0

        if cache[index][seats] != -1:
            return cache[index][seats]

        result = 0

        if seats == 2:
            if corridor[index] == 'S':
                result = self.count(index + 1, 1, corridor, cache)
            else:
                result = (self.count(index + 1, 0, corridor, cache) + self.count(index + 1, 2, corridor, cache)) % self.MOD
        else:
            if corridor[index] == 'S':
                result = self.count(index + 1, seats + 1, corridor, cache)
            else:
                result = self.count(index + 1, seats, corridor, cache)

        cache[index][seats] = result
        return cache[index][seats]

    def numberOfWays(self, corridor):
        cache = [[-1] * 3 for _ in range(len(corridor))]
        return self.count(0, 0, corridor, cache)


solution = Solution()
corridor = "SSPSSP"
result = solution.numberOfWays(corridor)
print(result)
